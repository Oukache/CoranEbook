apply plugin: 'com.android.application'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "com.oukache.coranebook"
        minSdkVersion 15
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            minifyEnabled false
            // zipAlign false // this is default for debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // minifyEnabled true
            // proguardFile '..\proguard.cfg'
            // signingConfig signingConfigs.release
            // zipAlign true // this is default for release
            // testPackageName 'com.donnfelker.android.bootstrap.tests'
            // testInstrumentationRunner 'android.test.InstrumentationTestRunner' // this is the default
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.0.0'
    compile 'com.google.code.gson:gson:2.3.1'
    // Dependency Injection
    compile 'com.squareup.dagger:dagger:1.0.1'
    compile 'com.squareup.dagger:dagger-compiler:1.0.1'
    compile 'com.jakewharton:butterknife:6.0.0'
    // Event Bus
    //compile 'com.squareup:otto:1.3.5'
    // Image Loading
    //compile 'com.squareup.picasso:picasso:1.1.1'
    // HTTP
    compile 'com.squareup.retrofit:retrofit:1.5.1'
    // test
    androidTestCompile 'junit:junit:4.11'
    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
    androidTestCompile 'org.mockito:mockito-core:1.9.5'

    /*
    pour circular button, utilie pour le chargement du coran
    compile 'com.github.dmytrodanylyk.circular-progress-button:library:1.1.3'
     */

    /*
    compile('com.joanzapata.android.asyncservice:android-asyncservice:0.0.5@aar') { transitive = true }

    @AsyncService
    public class DemoService {

    public User getUser(String name) {
        // Runs asynchronously.
        return …;
    }

    }
    ... then use it.

    … {
        service.getUser("joan");
    }

    @OnMessage void onUser(User e) {
        // Runs on UI thread.
    }

     */
}
